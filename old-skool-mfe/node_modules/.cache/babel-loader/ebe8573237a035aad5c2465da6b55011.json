{"ast":null,"code":"var _jsxFileName = \"/Users/valenlongfeather/Documents/OldSkoolMFE/old-skool-mfe/src/MicroFrontend.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MicroFrontend extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderMicroFrontend = () => {\n      const {\n        name,\n        window,\n        history\n      } = this.props;\n      window[`render${name}`](`${name}-container`, history);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      name,\n      host,\n      document\n    } = this.props;\n    const scriptId = `micro-frontend-script-${name}`;\n\n    if (document.getElementById(scriptId)) {\n      this.renderMicroFrontend();\n      return;\n    }\n\n    fetch(`${host}/asset-manifest.json`).then(res => res.json()).then(manifest => {\n      const script = document.createElement(\"script\");\n      script.id = scriptId;\n      script.crossOrigin = \"\";\n      script.src = `${host}${manifest[\"main.js\"]}`;\n      script.onload = this.renderMicroFrontend;\n      document.head.appendChild(script);\n    });\n  }\n\n  componentWillUnmount() {\n    const {\n      name,\n      window\n    } = this.props;\n    window[`unmount${name}`](`${name}-container`);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      id: `${this.props.name}-container`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nMicroFrontend.defaultProps = {\n  document,\n  window\n};\nexport default MicroFrontend;","map":{"version":3,"sources":["/Users/valenlongfeather/Documents/OldSkoolMFE/old-skool-mfe/src/MicroFrontend.js"],"names":["React","MicroFrontend","Component","renderMicroFrontend","name","window","history","props","componentDidMount","host","document","scriptId","getElementById","fetch","then","res","json","manifest","script","createElement","id","crossOrigin","src","onload","head","appendChild","componentWillUnmount","render","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SA4B1CC,mBA5B0C,GA4BpB,MAAM;AAC1B,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,MAAR;AAAgBC,QAAAA;AAAhB,UAA4B,KAAKC,KAAvC;AAEAF,MAAAA,MAAM,CAAE,SAAQD,IAAK,EAAf,CAAN,CAAyB,GAAEA,IAAK,YAAhC,EAA6CE,OAA7C;AACD,KAhCyC;AAAA;;AAC1CE,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEJ,MAAAA,IAAF;AAAQK,MAAAA,IAAR;AAAcC,MAAAA;AAAd,QAA2B,KAAKH,KAAtC;AACA,UAAMI,QAAQ,GAAI,yBAAwBP,IAAK,EAA/C;;AAEA,QAAIM,QAAQ,CAACE,cAAT,CAAwBD,QAAxB,CAAJ,EAAuC;AACrC,WAAKR,mBAAL;AACA;AACD;;AAEDU,IAAAA,KAAK,CAAE,GAAEJ,IAAK,sBAAT,CAAL,CACGK,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,QAAD,IAAc;AAClB,YAAMC,MAAM,GAAGR,QAAQ,CAACS,aAAT,CAAuB,QAAvB,CAAf;AACAD,MAAAA,MAAM,CAACE,EAAP,GAAYT,QAAZ;AACAO,MAAAA,MAAM,CAACG,WAAP,GAAqB,EAArB;AACAH,MAAAA,MAAM,CAACI,GAAP,GAAc,GAAEb,IAAK,GAAEQ,QAAQ,CAAC,SAAD,CAAY,EAA3C;AACAC,MAAAA,MAAM,CAACK,MAAP,GAAgB,KAAKpB,mBAArB;AACAO,MAAAA,QAAQ,CAACc,IAAT,CAAcC,WAAd,CAA0BP,MAA1B;AACD,KATH;AAUD;;AAEDQ,EAAAA,oBAAoB,GAAG;AACrB,UAAM;AAAEtB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,KAAKE,KAA9B;AAEAF,IAAAA,MAAM,CAAE,UAASD,IAAK,EAAhB,CAAN,CAA0B,GAAEA,IAAK,YAAjC;AACD;;AAQDuB,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAM,MAAA,EAAE,EAAG,GAAE,KAAKpB,KAAL,CAAWH,IAAK;AAA7B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AApCyC;;AAuC5CH,aAAa,CAAC2B,YAAd,GAA6B;AAC3BlB,EAAAA,QAD2B;AAE3BL,EAAAA;AAF2B,CAA7B;AAKA,eAAeJ,aAAf","sourcesContent":["import React from \"react\";\n\nclass MicroFrontend extends React.Component {\n  componentDidMount() {\n    const { name, host, document } = this.props;\n    const scriptId = `micro-frontend-script-${name}`;\n\n    if (document.getElementById(scriptId)) {\n      this.renderMicroFrontend();\n      return;\n    }\n\n    fetch(`${host}/asset-manifest.json`)\n      .then((res) => res.json())\n      .then((manifest) => {\n        const script = document.createElement(\"script\");\n        script.id = scriptId;\n        script.crossOrigin = \"\";\n        script.src = `${host}${manifest[\"main.js\"]}`;\n        script.onload = this.renderMicroFrontend;\n        document.head.appendChild(script);\n      });\n  }\n\n  componentWillUnmount() {\n    const { name, window } = this.props;\n\n    window[`unmount${name}`](`${name}-container`);\n  }\n\n  renderMicroFrontend = () => {\n    const { name, window, history } = this.props;\n\n    window[`render${name}`](`${name}-container`, history);\n  };\n\n  render() {\n    return <main id={`${this.props.name}-container`} />;\n  }\n}\n\nMicroFrontend.defaultProps = {\n  document,\n  window,\n};\n\nexport default MicroFrontend;\n"]},"metadata":{},"sourceType":"module"}